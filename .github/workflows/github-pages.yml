name: Deploy to GitHub Pages

on:
  push:
    branches: [master]
  workflow_dispatch:


permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 9.x
          
      - name: Get PNPM Store Directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            .next/cache
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install
        
      - name: Build with Next.js
        run: |
          echo "NEXT_PUBLIC_BASE_PATH=/KITE-Aggregator" >> .env
          echo "NEXT_PUBLIC_CONVEX_URL=${{ secrets.NEXT_PUBLIC_CONVEX_URL }}" >> .env
          echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" >> .env
          pnpm build
        env:
          GITHUB_ACTIONS: 'true'
          NODE_ENV: 'production'
          
      - name: Upload static files
        uses: actions/upload-pages-artifact@v3
        with:
          path: out/
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
